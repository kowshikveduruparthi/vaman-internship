
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Wolf <claire@symbioticeda.com>          |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+2406 (git sha1 9ac3484, x86_64-conda_cos6-linux-gnu-gcc 1.24.0.133_b0863d8_dirty -fvisibility-inlines-hidden -fmessage-length=0 -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -fdebug-prefix-map=/root/anaconda3/conda-bld/yosys_1607410735049/work=/usr/local/src/conda/yosys-0.8.0_0003_e80fb742f_20201208_122808 -fdebug-prefix-map=/home/veeracharyulu/qorc-sdk/fpga_toolchain_install/v1.3.1/conda=/usr/local/src/conda-prefix -fPIC -Os)


-- Parsing `/home/veeracharyulu/qorc-sdk/vaman/trunk/fpga/sevenseg/codes/loop/decade_counter.v' using frontend `verilog' --

1. Executing Verilog-2005 frontend: /home/veeracharyulu/qorc-sdk/vaman/trunk/fpga/sevenseg/codes/loop/decade_counter.v
Parsing Verilog input from `/home/veeracharyulu/qorc-sdk/vaman/trunk/fpga/sevenseg/codes/loop/decade_counter.v' to AST representation.
Generating RTLIL representation for module `\decade_counter'.
Successfully finished Verilog frontend.

-- Running command `tcl /home/veeracharyulu/qorc-sdk/fpga_toolchain_install/v1.3.1/quicklogic-arch-defs/share/quicklogic/synth.tcl' --
[TCL: yosys -import] Command name collision: found pre-existing command `cd' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `eval' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `exec' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `trace' -> skip.

2. Executing Verilog-2005 frontend: /home/veeracharyulu/qorc-sdk/fpga_toolchain_install/v1.3.1/quicklogic-arch-defs/share/techmaps/quicklogic/pp3/techmap/cells_sim.v
Parsing Verilog input from `/home/veeracharyulu/qorc-sdk/fpga_toolchain_install/v1.3.1/quicklogic-arch-defs/share/techmaps/quicklogic/pp3/techmap/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\VCC'.
Generating RTLIL representation for module `\GND'.
Generating RTLIL representation for module `\fpga_interconnect'.
Generating RTLIL representation for module `\CLOCK_CELL'.
Generating RTLIL representation for module `\BIDIR_CELL'.
Generating RTLIL representation for module `\SDIOMUX_CELL'.
Generating RTLIL representation for module `\T_FRAG'.
Generating RTLIL representation for module `\B_FRAG'.
Generating RTLIL representation for module `\Q_FRAG'.
Generating RTLIL representation for module `\F_FRAG'.
Generating RTLIL representation for module `\C_FRAG'.
Generating RTLIL representation for module `\ASSP'.
Generating RTLIL representation for module `\MULT'.
Generating RTLIL representation for module `\GMUX_IP'.
Generating RTLIL representation for module `\GMUX_IC'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: /home/veeracharyulu/qorc-sdk/fpga_toolchain_install/v1.3.1/quicklogic-arch-defs/bin/../share/arch/ql-eos-s3_wlcsp/cells/ram_sim.v
Parsing Verilog input from `/home/veeracharyulu/qorc-sdk/fpga_toolchain_install/v1.3.1/quicklogic-arch-defs/bin/../share/arch/ql-eos-s3_wlcsp/cells/ram_sim.v' to AST representation.
Generating RTLIL representation for module `\RAM_CE0_FE0_PR0_WSA0_WSB0_VPR'.
Generating RTLIL representation for module `\RAM_CE0_FE0_PR0_WSA0_WSB1_VPR'.
Generating RTLIL representation for module `\RAM_CE0_FE0_PR0_WSA1_WSB0_VPR'.
Generating RTLIL representation for module `\RAM_CE0_FE0_PR0_WSA1_WSB1_VPR'.
Generating RTLIL representation for module `\RAM_CE0_FE0_PR1_WSA0_WSB0_VPR'.
Generating RTLIL representation for module `\RAM_CE0_FE0_PR1_WSA0_WSB1_VPR'.
Generating RTLIL representation for module `\RAM_CE0_FE0_PR1_WSA1_WSB0_VPR'.
Generating RTLIL representation for module `\RAM_CE0_FE0_PR1_WSA1_WSB1_VPR'.
Generating RTLIL representation for module `\RAM_CE0_FE1_D0_PR0_WSA0_WSB0_VPR'.
Generating RTLIL representation for module `\RAM_CE0_FE1_D0_PR0_WSA0_WSB1_VPR'.
Generating RTLIL representation for module `\RAM_CE0_FE1_D0_PR0_WSA1_WSB0_VPR'.
Generating RTLIL representation for module `\RAM_CE0_FE1_D0_PR0_WSA1_WSB1_VPR'.
Generating RTLIL representation for module `\RAM_CE0_FE1_D0_PR1_WSA0_WSB0_VPR'.
Generating RTLIL representation for module `\RAM_CE0_FE1_D0_PR1_WSA0_WSB1_VPR'.
Generating RTLIL representation for module `\RAM_CE0_FE1_D0_PR1_WSA1_WSB0_VPR'.
Generating RTLIL representation for module `\RAM_CE0_FE1_D0_PR1_WSA1_WSB1_VPR'.
Generating RTLIL representation for module `\RAM_CE0_FE1_D1_PR0_WSA0_WSB0_VPR'.
Generating RTLIL representation for module `\RAM_CE0_FE1_D1_PR0_WSA0_WSB1_VPR'.
Generating RTLIL representation for module `\RAM_CE0_FE1_D1_PR0_WSA1_WSB0_VPR'.
Generating RTLIL representation for module `\RAM_CE0_FE1_D1_PR0_WSA1_WSB1_VPR'.
Generating RTLIL representation for module `\RAM_CE0_FE1_D1_PR1_WSA0_WSB0_VPR'.
Generating RTLIL representation for module `\RAM_CE0_FE1_D1_PR1_WSA0_WSB1_VPR'.
Generating RTLIL representation for module `\RAM_CE0_FE1_D1_PR1_WSA1_WSB0_VPR'.
Generating RTLIL representation for module `\RAM_CE0_FE1_D1_PR1_WSA1_WSB1_VPR'.
Generating RTLIL representation for module `\RAM_CE1_FE0_PR0_WSA0_WSB0_VPR'.
Generating RTLIL representation for module `\RAM_CE1_FE0_PR0_WSA0_WSB1_VPR'.
Generating RTLIL representation for module `\RAM_CE1_FE0_PR0_WSA0_WSB2_VPR'.
Generating RTLIL representation for module `\RAM_CE1_FE0_PR0_WSA1_WSB0_VPR'.
Generating RTLIL representation for module `\RAM_CE1_FE0_PR0_WSA1_WSB1_VPR'.
Generating RTLIL representation for module `\RAM_CE1_FE0_PR0_WSA1_WSB2_VPR'.
Generating RTLIL representation for module `\RAM_CE1_FE0_PR0_WSA2_WSB0_VPR'.
Generating RTLIL representation for module `\RAM_CE1_FE0_PR0_WSA2_WSB1_VPR'.
Generating RTLIL representation for module `\RAM_CE1_FE0_PR0_WSA2_WSB2_VPR'.
Generating RTLIL representation for module `\RAM_CE1_FE0_PR1_WSA0_WSB0_VPR'.
Generating RTLIL representation for module `\RAM_CE1_FE0_PR1_WSA0_WSB1_VPR'.
Generating RTLIL representation for module `\RAM_CE1_FE0_PR1_WSA0_WSB2_VPR'.
Generating RTLIL representation for module `\RAM_CE1_FE0_PR1_WSA1_WSB0_VPR'.
Generating RTLIL representation for module `\RAM_CE1_FE0_PR1_WSA1_WSB1_VPR'.
Generating RTLIL representation for module `\RAM_CE1_FE0_PR1_WSA1_WSB2_VPR'.
Generating RTLIL representation for module `\RAM_CE1_FE0_PR1_WSA2_WSB0_VPR'.
Generating RTLIL representation for module `\RAM_CE1_FE0_PR1_WSA2_WSB1_VPR'.
Generating RTLIL representation for module `\RAM_CE1_FE0_PR1_WSA2_WSB2_VPR'.
Generating RTLIL representation for module `\RAM_CE1_FE1_D0_PR0_WSA0_WSB0_VPR'.
Generating RTLIL representation for module `\RAM_CE1_FE1_D0_PR0_WSA0_WSB1_VPR'.
Generating RTLIL representation for module `\RAM_CE1_FE1_D0_PR0_WSA0_WSB2_VPR'.
Generating RTLIL representation for module `\RAM_CE1_FE1_D0_PR0_WSA1_WSB0_VPR'.
Generating RTLIL representation for module `\RAM_CE1_FE1_D0_PR0_WSA1_WSB1_VPR'.
Generating RTLIL representation for module `\RAM_CE1_FE1_D0_PR0_WSA1_WSB2_VPR'.
Generating RTLIL representation for module `\RAM_CE1_FE1_D0_PR0_WSA2_WSB0_VPR'.
Generating RTLIL representation for module `\RAM_CE1_FE1_D0_PR0_WSA2_WSB1_VPR'.
Generating RTLIL representation for module `\RAM_CE1_FE1_D0_PR0_WSA2_WSB2_VPR'.
Generating RTLIL representation for module `\RAM_CE1_FE1_D0_PR1_WSA0_WSB0_VPR'.
Generating RTLIL representation for module `\RAM_CE1_FE1_D0_PR1_WSA0_WSB1_VPR'.
Generating RTLIL representation for module `\RAM_CE1_FE1_D0_PR1_WSA0_WSB2_VPR'.
Generating RTLIL representation for module `\RAM_CE1_FE1_D0_PR1_WSA1_WSB0_VPR'.
Generating RTLIL representation for module `\RAM_CE1_FE1_D0_PR1_WSA1_WSB1_VPR'.
Generating RTLIL representation for module `\RAM_CE1_FE1_D0_PR1_WSA1_WSB2_VPR'.
Generating RTLIL representation for module `\RAM_CE1_FE1_D0_PR1_WSA2_WSB0_VPR'.
Generating RTLIL representation for module `\RAM_CE1_FE1_D0_PR1_WSA2_WSB1_VPR'.
Generating RTLIL representation for module `\RAM_CE1_FE1_D0_PR1_WSA2_WSB2_VPR'.
Generating RTLIL representation for module `\RAM_CE1_FE1_D1_PR0_WSA0_WSB0_VPR'.
Generating RTLIL representation for module `\RAM_CE1_FE1_D1_PR0_WSA0_WSB1_VPR'.
Generating RTLIL representation for module `\RAM_CE1_FE1_D1_PR0_WSA0_WSB2_VPR'.
Generating RTLIL representation for module `\RAM_CE1_FE1_D1_PR0_WSA1_WSB0_VPR'.
Generating RTLIL representation for module `\RAM_CE1_FE1_D1_PR0_WSA1_WSB1_VPR'.
Generating RTLIL representation for module `\RAM_CE1_FE1_D1_PR0_WSA1_WSB2_VPR'.
Generating RTLIL representation for module `\RAM_CE1_FE1_D1_PR0_WSA2_WSB0_VPR'.
Generating RTLIL representation for module `\RAM_CE1_FE1_D1_PR0_WSA2_WSB1_VPR'.
Generating RTLIL representation for module `\RAM_CE1_FE1_D1_PR0_WSA2_WSB2_VPR'.
Generating RTLIL representation for module `\RAM_CE1_FE1_D1_PR1_WSA0_WSB0_VPR'.
Generating RTLIL representation for module `\RAM_CE1_FE1_D1_PR1_WSA0_WSB1_VPR'.
Generating RTLIL representation for module `\RAM_CE1_FE1_D1_PR1_WSA0_WSB2_VPR'.
Generating RTLIL representation for module `\RAM_CE1_FE1_D1_PR1_WSA1_WSB0_VPR'.
Generating RTLIL representation for module `\RAM_CE1_FE1_D1_PR1_WSA1_WSB1_VPR'.
Generating RTLIL representation for module `\RAM_CE1_FE1_D1_PR1_WSA1_WSB2_VPR'.
Generating RTLIL representation for module `\RAM_CE1_FE1_D1_PR1_WSA2_WSB0_VPR'.
Generating RTLIL representation for module `\RAM_CE1_FE1_D1_PR1_WSA2_WSB1_VPR'.
Generating RTLIL representation for module `\RAM_CE1_FE1_D1_PR1_WSA2_WSB2_VPR'.
Successfully finished Verilog frontend.

4. Executing SYNTH_QUICKLOGIC pass.

4.1. Executing Verilog-2005 frontend: /home/veeracharyulu/qorc-sdk/fpga_toolchain_install/v1.3.1/conda/bin/../share/yosys/quicklogic/cells_sim.v
Parsing Verilog input from `/home/veeracharyulu/qorc-sdk/fpga_toolchain_install/v1.3.1/conda/bin/../share/yosys/quicklogic/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

4.2. Executing Verilog-2005 frontend: /home/veeracharyulu/qorc-sdk/fpga_toolchain_install/v1.3.1/conda/bin/../share/yosys/quicklogic/pp3_cells_sim.v
Parsing Verilog input from `/home/veeracharyulu/qorc-sdk/fpga_toolchain_install/v1.3.1/conda/bin/../share/yosys/quicklogic/pp3_cells_sim.v' to AST representation.
Generating RTLIL representation for module `\LUT1'.
Generating RTLIL representation for module `\LUT2'.
Generating RTLIL representation for module `\LUT3'.
Generating RTLIL representation for module `\LUT4'.
Generating RTLIL representation for module `\inpad'.
Generating RTLIL representation for module `\outpad'.
Generating RTLIL representation for module `\ckpad'.
Generating RTLIL representation for module `\bipad'.
Generating RTLIL representation for module `\dff'.
Generating RTLIL representation for module `\dffc'.
Generating RTLIL representation for module `\dffp'.
Generating RTLIL representation for module `\dffpc'.
Generating RTLIL representation for module `\dffe'.
Generating RTLIL representation for module `\dffec'.
Generating RTLIL representation for module `\dffepc'.
Generating RTLIL representation for module `\AND2I0'.
Generating RTLIL representation for module `\mux2x0'.
Generating RTLIL representation for module `\mux2x1'.
Generating RTLIL representation for module `\mux4x0'.
Generating RTLIL representation for module `\mux8x0'.
Generating RTLIL representation for module `\logic_cell_macro'.
Generating RTLIL representation for module `\ahb_gen_bfm'.
Generating RTLIL representation for module `\oscillator_s1'.
Generating RTLIL representation for module `\sdma_bfm'.
Generating RTLIL representation for module `\ahb2fb_asynbrig_if'.
Generating RTLIL representation for module `\fb2ahb_asynbrig_if'.
Generating RTLIL representation for module `\ahb2fb_asynbrig'.
Generating RTLIL representation for module `\qlal4s3b_cell_macro_bfm'.
Generating RTLIL representation for module `\qlal4s3b_cell_macro'.
Generating RTLIL representation for module `\fifo_controller_model'.
Generating RTLIL representation for module `\ram'.
Warning: Replacing memory \ram with list of registers. See /home/veeracharyulu/qorc-sdk/fpga_toolchain_install/v1.3.1/conda/bin/../share/yosys/quicklogic/pp3_cells_sim.v:3671, /home/veeracharyulu/qorc-sdk/fpga_toolchain_install/v1.3.1/conda/bin/../share/yosys/quicklogic/pp3_cells_sim.v:3585, /home/veeracharyulu/qorc-sdk/fpga_toolchain_install/v1.3.1/conda/bin/../share/yosys/quicklogic/pp3_cells_sim.v:3560
Generating RTLIL representation for module `\x2_model'.
Generating RTLIL representation for module `\ram_block_8K'.
Generating RTLIL representation for module `\sw_mux'.
Generating RTLIL representation for module `\ram8k_2x1_cell'.
Generating RTLIL representation for module `\ram8k_2x1_cell_macro'.
Generating RTLIL representation for module `\gpio_cell_macro'.
Generating RTLIL representation for module `\qlal4s3_mult_32x32_cell'.
Generating RTLIL representation for module `\qlal4s3_mult_16x16_cell'.
Generating RTLIL representation for module `\signed_mult'.
Generating RTLIL representation for module `\qlal4s3_mult_cell_macro'.
Generating RTLIL representation for module `\RAM_8K_BLK'.
Generating RTLIL representation for module `\RAM_16K_BLK'.
Generating RTLIL representation for module `\FIFO_8K_BLK'.
Generating RTLIL representation for module `\FIFO_16K_BLK'.
Successfully finished Verilog frontend.

4.3. Executing HIERARCHY pass (managing design hierarchy).

4.3.1. Finding top of design hierarchy..
root of   1 design levels: decade_counter      
Automatically selected decade_counter as design top module.

4.3.2. Analyzing design hierarchy..
Top module:  \decade_counter

4.3.3. Analyzing design hierarchy..
Top module:  \decade_counter
Removed 0 unused modules.

4.4. Executing PROC pass (convert processes to netlists).

4.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

4.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/home/veeracharyulu/qorc-sdk/fpga_toolchain_install/v1.3.1/quicklogic-arch-defs/share/techmaps/quicklogic/pp3/techmap/cells_sim.v:4781$48 in module MULT.
Marked 2 switch rules as full_case in process $proc$/home/veeracharyulu/qorc-sdk/fpga_toolchain_install/v1.3.1/quicklogic-arch-defs/share/techmaps/quicklogic/pp3/techmap/cells_sim.v:242$30 in module Q_FRAG.
Marked 1 switch rules as full_case in process $proc$/home/veeracharyulu/qorc-sdk/vaman/trunk/fpga/sevenseg/codes/loop/decade_counter.v:0$8 in module decade_counter.
Marked 2 switch rules as full_case in process $proc$/home/veeracharyulu/qorc-sdk/vaman/trunk/fpga/sevenseg/codes/loop/decade_counter.v:33$3 in module decade_counter.
Removed a total of 0 dead cases.

4.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 7 assignments to connections.

4.4.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\Q_FRAG.$proc$/home/veeracharyulu/qorc-sdk/fpga_toolchain_install/v1.3.1/quicklogic-arch-defs/share/techmaps/quicklogic/pp3/techmap/cells_sim.v:0$31'.
  Set init value: \QZ = 1'0
Found init rule in `\decade_counter.$proc$/home/veeracharyulu/qorc-sdk/vaman/trunk/fpga/sevenseg/codes/loop/decade_counter.v:4$13'.
  Set init value: \x = 7'0000000

4.4.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \QST in `\Q_FRAG.$proc$/home/veeracharyulu/qorc-sdk/fpga_toolchain_install/v1.3.1/quicklogic-arch-defs/share/techmaps/quicklogic/pp3/techmap/cells_sim.v:242$30'.
Found async reset \QRT in `\Q_FRAG.$proc$/home/veeracharyulu/qorc-sdk/fpga_toolchain_install/v1.3.1/quicklogic-arch-defs/share/techmaps/quicklogic/pp3/techmap/cells_sim.v:242$30'.

4.4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\MULT.$proc$/home/veeracharyulu/qorc-sdk/fpga_toolchain_install/v1.3.1/quicklogic-arch-defs/share/techmaps/quicklogic/pp3/techmap/cells_sim.v:4781$48'.
     1/2: $0\Cmult[63:0] [63:32]
     2/2: $0\Cmult[63:0] [31:0]
Creating decoders for process `\Q_FRAG.$proc$/home/veeracharyulu/qorc-sdk/fpga_toolchain_install/v1.3.1/quicklogic-arch-defs/share/techmaps/quicklogic/pp3/techmap/cells_sim.v:0$31'.
Creating decoders for process `\Q_FRAG.$proc$/home/veeracharyulu/qorc-sdk/fpga_toolchain_install/v1.3.1/quicklogic-arch-defs/share/techmaps/quicklogic/pp3/techmap/cells_sim.v:242$30'.
     1/1: $0\QZ[0:0]
Creating decoders for process `\decade_counter.$proc$/home/veeracharyulu/qorc-sdk/vaman/trunk/fpga/sevenseg/codes/loop/decade_counter.v:4$13'.
Creating decoders for process `\decade_counter.$proc$/home/veeracharyulu/qorc-sdk/vaman/trunk/fpga/sevenseg/codes/loop/decade_counter.v:0$8'.
     1/1: $1$func$\black$/home/veeracharyulu/qorc-sdk/vaman/trunk/fpga/sevenseg/codes/loop/decade_counter.v:46$2$\black[6:0]$12
Creating decoders for process `\decade_counter.$proc$/home/veeracharyulu/qorc-sdk/vaman/trunk/fpga/sevenseg/codes/loop/decade_counter.v:33$3'.
     1/3: $2\x[6:0]
     2/3: $1\x[6:0]
     3/3: $1\delay[26:0]

4.4.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\decade_counter.$func$\black$/home/veeracharyulu/qorc-sdk/vaman/trunk/fpga/sevenseg/codes/loop/decade_counter.v:46$1$\black' from process `\decade_counter.$proc$/home/veeracharyulu/qorc-sdk/vaman/trunk/fpga/sevenseg/codes/loop/decade_counter.v:0$8'.
No latch inferred for signal `\decade_counter.$func$\black$/home/veeracharyulu/qorc-sdk/vaman/trunk/fpga/sevenseg/codes/loop/decade_counter.v:46$2$\black' from process `\decade_counter.$proc$/home/veeracharyulu/qorc-sdk/vaman/trunk/fpga/sevenseg/codes/loop/decade_counter.v:0$8'.
No latch inferred for signal `\decade_counter.$func$\black$/home/veeracharyulu/qorc-sdk/vaman/trunk/fpga/sevenseg/codes/loop/decade_counter.v:46$2$\num_i' from process `\decade_counter.$proc$/home/veeracharyulu/qorc-sdk/vaman/trunk/fpga/sevenseg/codes/loop/decade_counter.v:0$8'.

4.4.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\MULT.\Cmult' using process `\MULT.$proc$/home/veeracharyulu/qorc-sdk/fpga_toolchain_install/v1.3.1/quicklogic-arch-defs/share/techmaps/quicklogic/pp3/techmap/cells_sim.v:4781$48'.
  created direct connection (no actual register cell created).
Creating register for signal `\Q_FRAG.\QZ' using process `\Q_FRAG.$proc$/home/veeracharyulu/qorc-sdk/fpga_toolchain_install/v1.3.1/quicklogic-arch-defs/share/techmaps/quicklogic/pp3/techmap/cells_sim.v:242$30'.
Warning: Complex async reset for dff `\QZ'.
  created $dffsr cell `$procdff$920' with positive edge clock and multiple level-sensitive resets.
Creating register for signal `\decade_counter.\delay' using process `\decade_counter.$proc$/home/veeracharyulu/qorc-sdk/vaman/trunk/fpga/sevenseg/codes/loop/decade_counter.v:33$3'.
  created $dff cell `$procdff$921' with positive edge clock.
Creating register for signal `\decade_counter.\x' using process `\decade_counter.$proc$/home/veeracharyulu/qorc-sdk/vaman/trunk/fpga/sevenseg/codes/loop/decade_counter.v:33$3'.
  created $dff cell `$procdff$922' with positive edge clock.

4.4.9. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 4 empty switches in `\MULT.$proc$/home/veeracharyulu/qorc-sdk/fpga_toolchain_install/v1.3.1/quicklogic-arch-defs/share/techmaps/quicklogic/pp3/techmap/cells_sim.v:4781$48'.
Removing empty process `MULT.$proc$/home/veeracharyulu/qorc-sdk/fpga_toolchain_install/v1.3.1/quicklogic-arch-defs/share/techmaps/quicklogic/pp3/techmap/cells_sim.v:4781$48'.
Removing empty process `Q_FRAG.$proc$/home/veeracharyulu/qorc-sdk/fpga_toolchain_install/v1.3.1/quicklogic-arch-defs/share/techmaps/quicklogic/pp3/techmap/cells_sim.v:0$31'.
Found and cleaned up 1 empty switch in `\Q_FRAG.$proc$/home/veeracharyulu/qorc-sdk/fpga_toolchain_install/v1.3.1/quicklogic-arch-defs/share/techmaps/quicklogic/pp3/techmap/cells_sim.v:242$30'.
Removing empty process `Q_FRAG.$proc$/home/veeracharyulu/qorc-sdk/fpga_toolchain_install/v1.3.1/quicklogic-arch-defs/share/techmaps/quicklogic/pp3/techmap/cells_sim.v:242$30'.
Removing empty process `decade_counter.$proc$/home/veeracharyulu/qorc-sdk/vaman/trunk/fpga/sevenseg/codes/loop/decade_counter.v:4$13'.
Found and cleaned up 1 empty switch in `\decade_counter.$proc$/home/veeracharyulu/qorc-sdk/vaman/trunk/fpga/sevenseg/codes/loop/decade_counter.v:0$8'.
Removing empty process `decade_counter.$proc$/home/veeracharyulu/qorc-sdk/vaman/trunk/fpga/sevenseg/codes/loop/decade_counter.v:0$8'.
Found and cleaned up 2 empty switches in `\decade_counter.$proc$/home/veeracharyulu/qorc-sdk/vaman/trunk/fpga/sevenseg/codes/loop/decade_counter.v:33$3'.
Removing empty process `decade_counter.$proc$/home/veeracharyulu/qorc-sdk/vaman/trunk/fpga/sevenseg/codes/loop/decade_counter.v:33$3'.
Cleaned up 8 empty switches.

4.5. Executing FLATTEN pass (flatten design).

4.6. Executing TRIBUF pass.

4.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module decade_counter.

4.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \decade_counter..
Removed 0 unused cells and 17 unused wires.

4.9. Executing DEMINOUT pass (demote inout ports to input or output).

4.10. Executing OPT pass (performing simple optimizations).

4.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module decade_counter.

4.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\decade_counter'.
Removed a total of 0 cells.

4.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \decade_counter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.

4.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \decade_counter.
Performed a total of 0 changes.

4.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\decade_counter'.
Removed a total of 0 cells.

4.10.6. Executing OPT_RMDFF pass (remove dff with constant values).

4.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \decade_counter..

4.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module decade_counter.

4.10.9. Finished OPT passes. (There is nothing left to do.)

4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module decade_counter.

4.12. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \decade_counter..

4.13. Executing CHECK pass (checking for obvious problems).
checking module decade_counter..
found and reported 0 problems.

4.14. Executing OPT pass (performing simple optimizations).

4.14.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module decade_counter.

4.14.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\decade_counter'.
Removed a total of 0 cells.

4.14.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \decade_counter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.

4.14.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \decade_counter.
Performed a total of 0 changes.

4.14.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\decade_counter'.
Removed a total of 0 cells.

4.14.6. Executing OPT_RMDFF pass (remove dff with constant values).

4.14.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \decade_counter..

4.14.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module decade_counter.

4.14.9. Finished OPT passes. (There is nothing left to do.)

4.15. Executing WREDUCE pass (reducing word size of cells).
Removed top 31 bits (of 32) from port B of cell decade_counter.$add$/home/veeracharyulu/qorc-sdk/vaman/trunk/fpga/sevenseg/codes/loop/decade_counter.v:35$4 ($add).
Removed top 5 bits (of 32) from port Y of cell decade_counter.$add$/home/veeracharyulu/qorc-sdk/vaman/trunk/fpga/sevenseg/codes/loop/decade_counter.v:35$4 ($add).
Removed top 7 bits (of 32) from port B of cell decade_counter.$gt$/home/veeracharyulu/qorc-sdk/vaman/trunk/fpga/sevenseg/codes/loop/decade_counter.v:36$5 ($gt).
Removed top 31 bits (of 32) from port B of cell decade_counter.$add$/home/veeracharyulu/qorc-sdk/vaman/trunk/fpga/sevenseg/codes/loop/decade_counter.v:39$6 ($add).
Removed top 25 bits (of 32) from port Y of cell decade_counter.$add$/home/veeracharyulu/qorc-sdk/vaman/trunk/fpga/sevenseg/codes/loop/decade_counter.v:39$6 ($add).
Removed top 28 bits (of 32) from port B of cell decade_counter.$gt$/home/veeracharyulu/qorc-sdk/vaman/trunk/fpga/sevenseg/codes/loop/decade_counter.v:41$7 ($gt).
Removed top 3 bits (of 7) from port B of cell decade_counter.$procmux$889_CMP0 ($eq).
Removed top 3 bits (of 7) from port B of cell decade_counter.$procmux$890_CMP0 ($eq).
Removed top 4 bits (of 7) from port B of cell decade_counter.$procmux$891_CMP0 ($eq).
Removed top 4 bits (of 7) from port B of cell decade_counter.$procmux$892_CMP0 ($eq).
Removed top 4 bits (of 7) from port B of cell decade_counter.$procmux$893_CMP0 ($eq).
Removed top 4 bits (of 7) from port B of cell decade_counter.$procmux$894_CMP0 ($eq).
Removed top 5 bits (of 7) from port B of cell decade_counter.$procmux$895_CMP0 ($eq).
Removed top 5 bits (of 7) from port B of cell decade_counter.$procmux$896_CMP0 ($eq).
Removed top 6 bits (of 7) from port B of cell decade_counter.$procmux$897_CMP0 ($eq).
Removed top 5 bits (of 32) from wire decade_counter.$add$/home/veeracharyulu/qorc-sdk/vaman/trunk/fpga/sevenseg/codes/loop/decade_counter.v:35$4_Y.

4.16. Executing PEEPOPT pass (run peephole optimizers).

4.17. Executing PMUXTREE pass.

4.18. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \decade_counter..
Removed 2 unused cells and 4 unused wires.

4.19. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module decade_counter:
  creating $macc model for $add$/home/veeracharyulu/qorc-sdk/vaman/trunk/fpga/sevenseg/codes/loop/decade_counter.v:35$4 ($add).
  creating $macc model for $add$/home/veeracharyulu/qorc-sdk/vaman/trunk/fpga/sevenseg/codes/loop/decade_counter.v:39$6 ($add).
  creating $alu model for $macc $add$/home/veeracharyulu/qorc-sdk/vaman/trunk/fpga/sevenseg/codes/loop/decade_counter.v:39$6.
  creating $alu model for $macc $add$/home/veeracharyulu/qorc-sdk/vaman/trunk/fpga/sevenseg/codes/loop/decade_counter.v:35$4.
  creating $alu model for $gt$/home/veeracharyulu/qorc-sdk/vaman/trunk/fpga/sevenseg/codes/loop/decade_counter.v:36$5 ($gt): new $alu
  creating $alu model for $gt$/home/veeracharyulu/qorc-sdk/vaman/trunk/fpga/sevenseg/codes/loop/decade_counter.v:41$7 ($gt): new $alu
  creating $alu cell for $gt$/home/veeracharyulu/qorc-sdk/vaman/trunk/fpga/sevenseg/codes/loop/decade_counter.v:41$7: $auto$alumacc.cc:485:replace_alu$956
  creating $alu cell for $gt$/home/veeracharyulu/qorc-sdk/vaman/trunk/fpga/sevenseg/codes/loop/decade_counter.v:36$5: $auto$alumacc.cc:485:replace_alu$961
  creating $alu cell for $add$/home/veeracharyulu/qorc-sdk/vaman/trunk/fpga/sevenseg/codes/loop/decade_counter.v:35$4: $auto$alumacc.cc:485:replace_alu$966
  creating $alu cell for $add$/home/veeracharyulu/qorc-sdk/vaman/trunk/fpga/sevenseg/codes/loop/decade_counter.v:39$6: $auto$alumacc.cc:485:replace_alu$969
  created 4 $alu and 0 $macc cells.

4.20. Executing OPT pass (performing simple optimizations).

4.20.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module decade_counter.

4.20.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\decade_counter'.
Removed a total of 0 cells.

4.20.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \decade_counter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.

4.20.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \decade_counter.
Performed a total of 0 changes.

4.20.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\decade_counter'.
Removed a total of 0 cells.

4.20.6. Executing OPT_RMDFF pass (remove dff with constant values).

4.20.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \decade_counter..
Removed 2 unused cells and 4 unused wires.

4.20.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module decade_counter.

4.20.9. Rerunning OPT passes. (Maybe there is more to do..)

4.20.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \decade_counter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.

4.20.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \decade_counter.
Performed a total of 0 changes.

4.20.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\decade_counter'.
Removed a total of 0 cells.

4.20.13. Executing OPT_RMDFF pass (remove dff with constant values).

4.20.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \decade_counter..

4.20.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module decade_counter.

4.20.16. Finished OPT passes. (There is nothing left to do.)

4.21. Executing FSM pass (extract and optimize FSM).

4.21.1. Executing FSM_DETECT pass (finding FSMs in design).

4.21.2. Executing FSM_EXTRACT pass (extracting FSM from design).

4.21.3. Executing FSM_OPT pass (simple optimizations of FSMs).

4.21.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \decade_counter..

4.21.5. Executing FSM_OPT pass (simple optimizations of FSMs).

4.21.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

4.21.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

4.21.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

4.22. Executing OPT pass (performing simple optimizations).

4.22.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module decade_counter.

4.22.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\decade_counter'.
Removed a total of 0 cells.

4.22.3. Executing OPT_RMDFF pass (remove dff with constant values).

4.22.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \decade_counter..

4.22.5. Finished fast OPT passes.

4.23. Executing MEMORY pass.

4.23.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

4.23.2. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).

4.23.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \decade_counter..

4.23.4. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

4.23.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \decade_counter..

4.23.6. Executing MEMORY_COLLECT pass (generating $mem cells).

4.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \decade_counter..

4.25. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).

4.26. Executing PP3_BRAMINIT pass.
cell type $auto$alumacc.cc:485:replace_alu$956
cell type $auto$alumacc.cc:485:replace_alu$961
cell type $auto$alumacc.cc:485:replace_alu$966
cell type $auto$alumacc.cc:485:replace_alu$969
cell type $auto$pmuxtree.cc:35:or_generator$934
cell type $auto$pmuxtree.cc:37:or_generator$946
cell type $auto$pmuxtree.cc:37:or_generator$950
cell type $auto$pmuxtree.cc:65:recursive_mux_generator$928
cell type $auto$pmuxtree.cc:65:recursive_mux_generator$930
cell type $auto$pmuxtree.cc:65:recursive_mux_generator$932
cell type $auto$pmuxtree.cc:65:recursive_mux_generator$936
cell type $auto$pmuxtree.cc:65:recursive_mux_generator$938
cell type $auto$pmuxtree.cc:65:recursive_mux_generator$940
cell type $auto$pmuxtree.cc:65:recursive_mux_generator$942
cell type $auto$pmuxtree.cc:65:recursive_mux_generator$944
cell type $auto$pmuxtree.cc:65:recursive_mux_generator$948
cell type $auto$pmuxtree.cc:65:recursive_mux_generator$952
cell type $procdff$921
cell type $procdff$922
cell type $procmux$889_CMP0
cell type $procmux$890_CMP0
cell type $procmux$891_CMP0
cell type $procmux$892_CMP0
cell type $procmux$893_CMP0
cell type $procmux$894_CMP0
cell type $procmux$895_CMP0
cell type $procmux$896_CMP0
cell type $procmux$897_CMP0
cell type $procmux$898_CMP0
cell type $procmux$900
cell type $procmux$903
cell type $procmux$906
cell type u_qlal4s3b_cell_macro

4.27. Executing TECHMAP pass (map to technology primitives).

4.27.1. Executing Verilog-2005 frontend: /home/veeracharyulu/qorc-sdk/fpga_toolchain_install/v1.3.1/conda/bin/../share/yosys/quicklogic/pp3_brams_map.v
Parsing Verilog input from `/home/veeracharyulu/qorc-sdk/fpga_toolchain_install/v1.3.1/conda/bin/../share/yosys/quicklogic/pp3_brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__QUICKLOGIC_RAMB16K'.
/home/veeracharyulu/qorc-sdk/fpga_toolchain_install/v1.3.1/conda/bin/../share/yosys/quicklogic/pp3_brams_map.v:21: Warning: Identifier `\VCC' is implicitly declared.
/home/veeracharyulu/qorc-sdk/fpga_toolchain_install/v1.3.1/conda/bin/../share/yosys/quicklogic/pp3_brams_map.v:22: Warning: Identifier `\GND' is implicitly declared.
Generating RTLIL representation for module `\$__QUICKLOGIC_RAMB8K'.
/home/veeracharyulu/qorc-sdk/fpga_toolchain_install/v1.3.1/conda/bin/../share/yosys/quicklogic/pp3_brams_map.v:239: Warning: Identifier `\GND' is implicitly declared.
/home/veeracharyulu/qorc-sdk/fpga_toolchain_install/v1.3.1/conda/bin/../share/yosys/quicklogic/pp3_brams_map.v:240: Warning: Identifier `\VCC' is implicitly declared.
Generating RTLIL representation for module `\RAM_8K_BLK'.
/home/veeracharyulu/qorc-sdk/fpga_toolchain_install/v1.3.1/conda/bin/../share/yosys/quicklogic/pp3_brams_map.v:539: Warning: Range [17:0] select out of bounds on signal `\out_reg0': Setting 2 MSB bits to undef.
Generating RTLIL representation for module `\RAM_16K_BLK'.
/home/veeracharyulu/qorc-sdk/fpga_toolchain_install/v1.3.1/conda/bin/../share/yosys/quicklogic/pp3_brams_map.v:825: Warning: Range [35:0] select out of bounds on signal `\out_reg0': Setting 4 MSB bits to undef.
Generating RTLIL representation for module `\FIFO_8K_BLK'.
/home/veeracharyulu/qorc-sdk/fpga_toolchain_install/v1.3.1/conda/bin/../share/yosys/quicklogic/pp3_brams_map.v:999: Warning: Range [35:0] select out of bounds on signal `\out_reg0': Setting 20 MSB bits to undef.
Generating RTLIL representation for module `\FIFO_16K_BLK'.
/home/veeracharyulu/qorc-sdk/fpga_toolchain_install/v1.3.1/conda/bin/../share/yosys/quicklogic/pp3_brams_map.v:1251: Warning: Range [35:0] select out of bounds on signal `\out_reg0': Setting 4 MSB bits to undef.
Successfully finished Verilog frontend.

4.27.2. Continuing TECHMAP pass.
No more expansions possible.

4.28. Executing OPT pass (performing simple optimizations).

4.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module decade_counter.

4.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\decade_counter'.
Removed a total of 0 cells.

4.28.3. Executing OPT_RMDFF pass (remove dff with constant values).

4.28.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \decade_counter..
Removed 1 unused cells and 1 unused wires.

4.28.5. Finished fast OPT passes.

4.29. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

4.30. Executing OPT pass (performing simple optimizations).

4.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module decade_counter.

4.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\decade_counter'.
Removed a total of 0 cells.

4.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \decade_counter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.

4.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \decade_counter.
    Consolidated identical input bits for $mux cell $auto$pmuxtree.cc:65:recursive_mux_generator$928:
      Old ports: A=7'0000000, B=7'0000100, Y=$auto$rtlil.cc:2037:Mux$929
      New ports: A=1'0, B=1'1, Y=$auto$rtlil.cc:2037:Mux$929 [2]
      New connections: { $auto$rtlil.cc:2037:Mux$929 [6:3] $auto$rtlil.cc:2037:Mux$929 [1:0] } = 6'000000
    Consolidated identical input bits for $mux cell $auto$pmuxtree.cc:65:recursive_mux_generator$930:
      Old ports: A=7'0100100, B=7'0100000, Y=$auto$rtlil.cc:2037:Mux$931
      New ports: A=1'1, B=1'0, Y=$auto$rtlil.cc:2037:Mux$931 [2]
      New connections: { $auto$rtlil.cc:2037:Mux$931 [6:3] $auto$rtlil.cc:2037:Mux$931 [1:0] } = 6'010000
    Consolidated identical input bits for $mux cell $auto$pmuxtree.cc:65:recursive_mux_generator$938:
      Old ports: A=7'0010010, B=7'0000110, Y=$auto$rtlil.cc:2037:Mux$939
      New ports: A=2'10, B=2'01, Y={ $auto$rtlil.cc:2037:Mux$939 [4] $auto$rtlil.cc:2037:Mux$939 [2] }
      New connections: { $auto$rtlil.cc:2037:Mux$939 [6:5] $auto$rtlil.cc:2037:Mux$939 [3] $auto$rtlil.cc:2037:Mux$939 [1:0] } = 5'00010
    Consolidated identical input bits for $mux cell $auto$pmuxtree.cc:65:recursive_mux_generator$942:
      Old ports: A=7'1111111, B=7'0000001, Y=$auto$rtlil.cc:2037:Mux$943
      New ports: A=1'1, B=1'0, Y=$auto$rtlil.cc:2037:Mux$943 [1]
      New connections: { $auto$rtlil.cc:2037:Mux$943 [6:2] $auto$rtlil.cc:2037:Mux$943 [0] } = { $auto$rtlil.cc:2037:Mux$943 [1] $auto$rtlil.cc:2037:Mux$943 [1] $auto$rtlil.cc:2037:Mux$943 [1] $auto$rtlil.cc:2037:Mux$943 [1] $auto$rtlil.cc:2037:Mux$943 [1] 1'1 }
  Optimizing cells in module \decade_counter.
    Consolidated identical input bits for $mux cell $auto$pmuxtree.cc:65:recursive_mux_generator$932:
      Old ports: A=$auto$rtlil.cc:2037:Mux$931, B=7'0001111, Y=$auto$rtlil.cc:2037:Mux$933
      New ports: A={ 1'1 $auto$rtlil.cc:2037:Mux$931 [2] 1'0 }, B=3'011, Y={ $auto$rtlil.cc:2037:Mux$933 [5] $auto$rtlil.cc:2037:Mux$933 [2] $auto$rtlil.cc:2037:Mux$933 [0] }
      New connections: { $auto$rtlil.cc:2037:Mux$933 [6] $auto$rtlil.cc:2037:Mux$933 [4:3] $auto$rtlil.cc:2037:Mux$933 [1] } = { 2'00 $auto$rtlil.cc:2037:Mux$933 [0] $auto$rtlil.cc:2037:Mux$933 [0] }
    Consolidated identical input bits for $mux cell $auto$pmuxtree.cc:65:recursive_mux_generator$940:
      Old ports: A=$auto$rtlil.cc:2037:Mux$939, B=7'1001100, Y=$auto$rtlil.cc:2037:Mux$941
      New ports: A={ $auto$rtlil.cc:2037:Mux$939 [4] 1'0 $auto$rtlil.cc:2037:Mux$939 [2] 1'1 }, B=4'0110, Y=$auto$rtlil.cc:2037:Mux$941 [4:1]
      New connections: { $auto$rtlil.cc:2037:Mux$941 [6:5] $auto$rtlil.cc:2037:Mux$941 [0] } = { $auto$rtlil.cc:2037:Mux$941 [3] 2'00 }
    Consolidated identical input bits for $mux cell $auto$pmuxtree.cc:65:recursive_mux_generator$944:
      Old ports: A=$auto$rtlil.cc:2037:Mux$943, B=7'1001111, Y=$auto$rtlil.cc:2037:Mux$945
      New ports: A={ $auto$rtlil.cc:2037:Mux$943 [1] $auto$rtlil.cc:2037:Mux$943 [1] }, B=2'01, Y={ $auto$rtlil.cc:2037:Mux$945 [4] $auto$rtlil.cc:2037:Mux$945 [1] }
      New connections: { $auto$rtlil.cc:2037:Mux$945 [6:5] $auto$rtlil.cc:2037:Mux$945 [3:2] $auto$rtlil.cc:2037:Mux$945 [0] } = { $auto$rtlil.cc:2037:Mux$945 [1] $auto$rtlil.cc:2037:Mux$945 [4] $auto$rtlil.cc:2037:Mux$945 [1] $auto$rtlil.cc:2037:Mux$945 [1] 1'1 }
  Optimizing cells in module \decade_counter.
    Consolidated identical input bits for $mux cell $auto$pmuxtree.cc:65:recursive_mux_generator$936:
      Old ports: A=$auto$rtlil.cc:2037:Mux$933, B={ 4'0000 $auto$rtlil.cc:2037:Mux$929 [2] 2'00 }, Y=$auto$rtlil.cc:2037:Mux$937
      New ports: A={ $auto$rtlil.cc:2037:Mux$933 [5] $auto$rtlil.cc:2037:Mux$933 [2] $auto$rtlil.cc:2037:Mux$933 [0] }, B={ 1'0 $auto$rtlil.cc:2037:Mux$929 [2] 1'0 }, Y={ $auto$rtlil.cc:2037:Mux$937 [5] $auto$rtlil.cc:2037:Mux$937 [2] $auto$rtlil.cc:2037:Mux$937 [0] }
      New connections: { $auto$rtlil.cc:2037:Mux$937 [6] $auto$rtlil.cc:2037:Mux$937 [4:3] $auto$rtlil.cc:2037:Mux$937 [1] } = { 2'00 $auto$rtlil.cc:2037:Mux$937 [0] $auto$rtlil.cc:2037:Mux$937 [0] }
    Consolidated identical input bits for $mux cell $auto$pmuxtree.cc:65:recursive_mux_generator$948:
      Old ports: A=$auto$rtlil.cc:2037:Mux$945, B=$auto$rtlil.cc:2037:Mux$941, Y=$auto$rtlil.cc:2037:Mux$949
      New ports: A={ $auto$rtlil.cc:2037:Mux$945 [4] $auto$rtlil.cc:2037:Mux$945 [4] $auto$rtlil.cc:2037:Mux$945 [1] $auto$rtlil.cc:2037:Mux$945 [1] $auto$rtlil.cc:2037:Mux$945 [1] 1'1 }, B={ 1'0 $auto$rtlil.cc:2037:Mux$941 [4:1] 1'0 }, Y=$auto$rtlil.cc:2037:Mux$949 [5:0]
      New connections: $auto$rtlil.cc:2037:Mux$949 [6] = $auto$rtlil.cc:2037:Mux$949 [3]
  Optimizing cells in module \decade_counter.
Performed a total of 9 changes.

4.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\decade_counter'.
Removed a total of 0 cells.

4.30.6. Executing OPT_RMDFF pass (remove dff with constant values).

4.30.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \decade_counter..

4.30.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module decade_counter.

4.30.9. Rerunning OPT passes. (Maybe there is more to do..)

4.30.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \decade_counter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.

4.30.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \decade_counter.
Performed a total of 0 changes.

4.30.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\decade_counter'.
Removed a total of 0 cells.

4.30.13. Executing OPT_RMDFF pass (remove dff with constant values).

4.30.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \decade_counter..

4.30.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module decade_counter.

4.30.16. Finished OPT passes. (There is nothing left to do.)

4.31. Executing TECHMAP pass (map to technology primitives).

4.31.1. Executing Verilog-2005 frontend: /home/veeracharyulu/qorc-sdk/fpga_toolchain_install/v1.3.1/conda/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/veeracharyulu/qorc-sdk/fpga_toolchain_install/v1.3.1/conda/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.31.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=7\Y_WIDTH=7 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=27\Y_WIDTH=27 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=25\B_WIDTH=27\Y_WIDTH=27 for cells of type $alu.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=3\B_WIDTH=6\Y_WIDTH=6 for cells of type $alu.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $and.
Using template $paramod\_90_lcu\WIDTH=7 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $not.
Using template $paramod\_90_lcu\WIDTH=27 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=6 for cells of type $lcu.
No more expansions possible.

4.32. Executing OPT pass (performing simple optimizations).

4.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module decade_counter.

4.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\decade_counter'.
Removed a total of 53 cells.

4.32.3. Executing OPT_RMDFF pass (remove dff with constant values).

4.32.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \decade_counter..
Removed 97 unused cells and 293 unused wires.

4.32.5. Finished fast OPT passes.

4.33. Executing MUXCOVER pass (mapping to wider MUXes).
Covering MUX trees in module decade_counter..
  Treeifying 61 MUXes:
    Found tree with 1 MUXes at root \a.
    Found tree with 3 MUXes at root \b.
    Found tree with 3 MUXes at root \c.
    Found tree with 1 MUXes at root \d.
    Found tree with 5 MUXes at root \e.
    Found tree with 2 MUXes at root \f.
    Found tree with 1 MUXes at root \g.
    Found tree with 1 MUXes at root $auto$rtlil.cc:2037:Mux$937 [3].
    Found tree with 1 MUXes at root $0\delay[26:0] [0].
    Found tree with 1 MUXes at root $0\delay[26:0] [1].
    Found tree with 1 MUXes at root $0\delay[26:0] [2].
    Found tree with 1 MUXes at root $0\delay[26:0] [3].
    Found tree with 1 MUXes at root $0\delay[26:0] [4].
    Found tree with 1 MUXes at root $0\delay[26:0] [5].
    Found tree with 1 MUXes at root $0\delay[26:0] [6].
    Found tree with 1 MUXes at root $0\delay[26:0] [7].
    Found tree with 1 MUXes at root $0\delay[26:0] [8].
    Found tree with 1 MUXes at root $0\delay[26:0] [9].
    Found tree with 1 MUXes at root $0\delay[26:0] [10].
    Found tree with 1 MUXes at root $0\delay[26:0] [11].
    Found tree with 1 MUXes at root $0\delay[26:0] [12].
    Found tree with 1 MUXes at root $0\delay[26:0] [13].
    Found tree with 1 MUXes at root $0\delay[26:0] [14].
    Found tree with 1 MUXes at root $0\delay[26:0] [15].
    Found tree with 1 MUXes at root $0\delay[26:0] [16].
    Found tree with 1 MUXes at root $0\delay[26:0] [17].
    Found tree with 1 MUXes at root $0\delay[26:0] [18].
    Found tree with 1 MUXes at root $0\delay[26:0] [19].
    Found tree with 1 MUXes at root $0\delay[26:0] [20].
    Found tree with 1 MUXes at root $0\delay[26:0] [21].
    Found tree with 1 MUXes at root $0\delay[26:0] [22].
    Found tree with 1 MUXes at root $0\delay[26:0] [23].
    Found tree with 1 MUXes at root $0\delay[26:0] [24].
    Found tree with 1 MUXes at root $0\delay[26:0] [25].
    Found tree with 1 MUXes at root $0\delay[26:0] [26].
    Found tree with 2 MUXes at root $0\x[6:0] [0].
    Found tree with 1 MUXes at root $0\x[6:0] [1].
    Found tree with 1 MUXes at root $0\x[6:0] [2].
    Found tree with 1 MUXes at root $0\x[6:0] [3].
    Found tree with 1 MUXes at root $0\x[6:0] [4].
    Found tree with 1 MUXes at root $0\x[6:0] [5].
    Found tree with 1 MUXes at root $0\x[6:0] [6].
    Found tree with 1 MUXes at root $auto$rtlil.cc:2037:Mux$945 [5].
    Found tree with 1 MUXes at root $auto$rtlil.cc:2037:Mux$945 [6].
    Found tree with 1 MUXes at root $auto$rtlil.cc:2037:Mux$949 [6].
    Found tree with 1 MUXes at root $auto$alumacc.cc:485:replace_alu$956.B [0].
    Found tree with 1 MUXes at root $auto$alumacc.cc:485:replace_alu$956.B [1].
    Found tree with 1 MUXes at root $auto$alumacc.cc:485:replace_alu$956.B [2].
    Found tree with 1 MUXes at root $auto$alumacc.cc:485:replace_alu$956.B [3].
    Found tree with 1 MUXes at root $auto$alumacc.cc:485:replace_alu$956.B [4].
    Found tree with 1 MUXes at root $auto$alumacc.cc:485:replace_alu$956.B [5].
    Finished treeification: Found 51 trees.
  Covering trees:
    Replaced tree at \a: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \b: 0 MUX2, 1 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \c: 3 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \d: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \e: 2 MUX2, 1 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \f: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \g: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2037:Mux$937 [3]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $0\delay[26:0] [0]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $0\delay[26:0] [1]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $0\delay[26:0] [2]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $0\delay[26:0] [3]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $0\delay[26:0] [4]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $0\delay[26:0] [5]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $0\delay[26:0] [6]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $0\delay[26:0] [7]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $0\delay[26:0] [8]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $0\delay[26:0] [9]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $0\delay[26:0] [10]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $0\delay[26:0] [11]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $0\delay[26:0] [12]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $0\delay[26:0] [13]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $0\delay[26:0] [14]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $0\delay[26:0] [15]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $0\delay[26:0] [16]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $0\delay[26:0] [17]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $0\delay[26:0] [18]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $0\delay[26:0] [19]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $0\delay[26:0] [20]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $0\delay[26:0] [21]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $0\delay[26:0] [22]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $0\delay[26:0] [23]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $0\delay[26:0] [24]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $0\delay[26:0] [25]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $0\delay[26:0] [26]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $0\x[6:0] [0]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $0\x[6:0] [1]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $0\x[6:0] [2]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $0\x[6:0] [3]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $0\x[6:0] [4]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $0\x[6:0] [5]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $0\x[6:0] [6]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2037:Mux$945 [5]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2037:Mux$945 [6]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2037:Mux$949 [6]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$alumacc.cc:485:replace_alu$956.B [0]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$alumacc.cc:485:replace_alu$956.B [1]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$alumacc.cc:485:replace_alu$956.B [2]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$alumacc.cc:485:replace_alu$956.B [3]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$alumacc.cc:485:replace_alu$956.B [4]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$alumacc.cc:485:replace_alu$956.B [5]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
  Added a total of 1 decoder MUXes.

4.34. Executing OPT_EXPR pass (perform const folding).
Optimizing module decade_counter.

4.35. Executing DFF2DFFE pass (transform $dff to $dffe where applicable).
Transforming FF to FF+Enable cells in module decade_counter:
  created $_DFFE_PP_ cell $auto$dff2dffe.cc:219:handle_dff_cell$2403 for $0\x[6:0] [0] -> \x [0].
  removing now obsolete cell $auto$simplemap.cc:420:simplemap_dff$1374.

4.36. Executing TECHMAP pass (map to technology primitives).

4.36.1. Executing Verilog-2005 frontend: /home/veeracharyulu/qorc-sdk/fpga_toolchain_install/v1.3.1/conda/bin/../share/yosys/quicklogic/pp3_ffs_map.v
Parsing Verilog input from `/home/veeracharyulu/qorc-sdk/fpga_toolchain_install/v1.3.1/conda/bin/../share/yosys/quicklogic/pp3_ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Successfully finished Verilog frontend.

4.36.2. Continuing TECHMAP pass.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
No more expansions possible.

4.37. Executing OPT_EXPR pass (perform const folding).
Optimizing module decade_counter.

4.38. Executing SIMPLEMAP pass (map simple cells to gate primitives).

4.39. Executing TECHMAP pass (map to technology primitives).

4.39.1. Executing Verilog-2005 frontend: /home/veeracharyulu/qorc-sdk/fpga_toolchain_install/v1.3.1/conda/bin/../share/yosys/quicklogic/pp3_latches_map.v
Parsing Verilog input from `/home/veeracharyulu/qorc-sdk/fpga_toolchain_install/v1.3.1/conda/bin/../share/yosys/quicklogic/pp3_latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCHSR_NNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_NNP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPN_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_PNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PNP_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Successfully finished Verilog frontend.

4.39.2. Continuing TECHMAP pass.
No more expansions possible.

4.40. Executing ABC pass (technology mapping using ABC).

4.40.1. Extracting gate netlist of module `\decade_counter' to `<abc-temp-dir>/input.blif'..
Extracted 274 gates and 310 wires to a netlist network with 34 inputs and 48 outputs.

4.40.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + read_lut <yosys-exe-dir>/../share/yosys/quicklogic/pp3_lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + sweep 
ABC: + eliminate 
ABC: + if 
ABC: The network was strashed and balanced before FPGA mapping.
ABC: + mfs 
ABC: + lutpack 
ABC: + dress 
ABC: Total number of equiv classes                =      79.
ABC: Participating nodes from both networks       =     199.
ABC: Participating nodes from the first network   =      83. (  76.85 % of nodes)
ABC: Participating nodes from the second network  =     116. ( 107.41 % of nodes)
ABC: Node pairs (any polarity)                    =      83. (  76.85 % of names can be moved)
ABC: Node pairs (same polarity)                   =      79. (  73.15 % of names can be moved)
ABC: Total runtime =     0.01 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

4.40.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      102
ABC RESULTS:        internal signals:      228
ABC RESULTS:           input signals:       34
ABC RESULTS:          output signals:       48
Removing temp directory.

4.41. Executing TECHMAP pass (map to technology primitives).

4.41.1. Executing Verilog-2005 frontend: /home/veeracharyulu/qorc-sdk/fpga_toolchain_install/v1.3.1/conda/bin/../share/yosys/quicklogic/pp3_ffs_map.v
Parsing Verilog input from `/home/veeracharyulu/qorc-sdk/fpga_toolchain_install/v1.3.1/conda/bin/../share/yosys/quicklogic/pp3_ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Successfully finished Verilog frontend.

4.41.2. Continuing TECHMAP pass.
No more expansions possible.
Removed 0 unused cells and 303 unused wires.

4.42. Executing TECHMAP pass (map to technology primitives).

4.42.1. Executing Verilog-2005 frontend: /home/veeracharyulu/qorc-sdk/fpga_toolchain_install/v1.3.1/conda/bin/../share/yosys/quicklogic/pp3_cells_map.v
Parsing Verilog input from `/home/veeracharyulu/qorc-sdk/fpga_toolchain_install/v1.3.1/conda/bin/../share/yosys/quicklogic/pp3_cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_MUX8_'.
Generating RTLIL representation for module `\$_MUX4_'.
Generating RTLIL representation for module `\$_MUX_'.
Generating RTLIL representation for module `\$_NOT_'.
Generating RTLIL representation for module `\qlal4s3_mult_16x16_cell'.
/home/veeracharyulu/qorc-sdk/fpga_toolchain_install/v1.3.1/conda/bin/../share/yosys/quicklogic/pp3_cells_map.v:44: Warning: Identifier `\Valid_mult_w' is implicitly declared.
Successfully finished Verilog frontend.

4.42.2. Executing Verilog-2005 frontend: /home/veeracharyulu/qorc-sdk/fpga_toolchain_install/v1.3.1/conda/bin/../share/yosys/quicklogic/pp3_lut_map.v
Parsing Verilog input from `/home/veeracharyulu/qorc-sdk/fpga_toolchain_install/v1.3.1/conda/bin/../share/yosys/quicklogic/pp3_lut_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

4.42.3. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000001111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1110 for cells of type $lut.
Using template \$_MUX4_ for cells of type $_MUX4_.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0010101010101000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01001011 for cells of type $lut.
No more expansions possible.
Removed 0 unused cells and 220 unused wires.

4.43. Executing Quicklogic_EQN pass (calculate equations for luts).

4.44. Updated 102 of LUT* elements with equation.

4.45. Executing AUTONAME pass.
Renamed 958 objects in module decade_counter (21 iterations).

4.46. Executing HIERARCHY pass (managing design hierarchy).

4.46.1. Analyzing design hierarchy..
Top module:  \decade_counter

4.46.2. Analyzing design hierarchy..
Top module:  \decade_counter
Removed 0 unused modules.

4.47. Printing statistics.

=== decade_counter ===

   Number of wires:                 80
   Number of wire bits:            144
   Number of public wires:          80
   Number of public wire bits:     144
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                139
     LUT2                           38
     LUT3                           46
     LUT4                           18
     dff                            33
     dffe                            1
     mux4x0                          2
     qlal4s3b_cell_macro             1

4.48. Executing CHECK pass (checking for obvious problems).
checking module decade_counter..
Warning: Wire decade_counter.x has an unprocessed 'init' attribute.
found and reported 1 problems.

4.49. Executing CLKBUFMAP pass (inserting global clock buffers).
Inserting $_BUF_ on decade_counter.clk[0].

4.50. Executing IOPADMAP pass (mapping inputs/outputs to IO-PAD cells).
Mapping port decade_counter.a using outpad.
Mapping port decade_counter.b using outpad.
Mapping port decade_counter.c using outpad.
Mapping port decade_counter.d using outpad.
Mapping port decade_counter.e using outpad.
Mapping port decade_counter.f using outpad.
Mapping port decade_counter.g using outpad.

4.51. Executing SPLITNETS pass (splitting up multi-bit signals).

4.52. Executing SETUNDEF pass (replace undef values with defined constants).

4.53. Executing HILOMAP pass (mapping to constant drivers).

4.54. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \decade_counter..
Removed 0 unused cells and 6 unused wires.

4.55. Executing CHECK pass (checking for obvious problems).
checking module decade_counter..
found and reported 0 problems.

5. Printing statistics.

=== decade_counter ===

   Number of wires:                147
   Number of wire bits:            147
   Number of public wires:         140
   Number of public wire bits:     140
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                147
     LUT2                           38
     LUT3                           46
     LUT4                           18
     dff                            33
     dffe                            1
     logic_0                         1
     mux4x0                          2
     outpad                          7
     qlal4s3b_cell_macro             1

Loading PCF from '/home/veeracharyulu/qorc-sdk/vaman/trunk/fpga/sevenseg/codes/loop/pygmy.pcf'...
Loading pinmap CSV from '/home/veeracharyulu/qorc-sdk/fpga_toolchain_install/v1.3.1/quicklogic-arch-defs/share/arch/ql-eos-s3_wlcsp/pinmap_PU64.csv'...
Processing cells...
  type       | net        | pad        | loc      | type     | instance
 ------------+------------+------------+----------+----------+-----------
  outpad     | a          | 5          | X6Y3     | BIDIR    | $iopadmap$decade_counter.a
  outpad     | b          | 6          | X8Y3     | BIDIR    | $iopadmap$decade_counter.b
  outpad     | c          | 2          | X10Y3    | BIDIR    | $iopadmap$decade_counter.c
  outpad     | d          | 3          | X12Y3    | BIDIR    | $iopadmap$decade_counter.d
  outpad     | e          | 64         | X14Y3    | BIDIR    | $iopadmap$decade_counter.e
  outpad     | f          | 62         | X16Y3    | BIDIR    | $iopadmap$decade_counter.f
  outpad     | g          | 61         | X20Y3    | BIDIR    | $iopadmap$decade_counter.g

6. Executing Verilog backend.
Dumping module `\decade_counter'.

7. Executing TECHMAP pass (map to technology primitives).

7.1. Executing Verilog-2005 frontend: /home/veeracharyulu/qorc-sdk/fpga_toolchain_install/v1.3.1/quicklogic-arch-defs/share/techmaps/quicklogic/pp3/techmap/cells_map.v
Parsing Verilog input from `/home/veeracharyulu/qorc-sdk/fpga_toolchain_install/v1.3.1/quicklogic-arch-defs/share/techmaps/quicklogic/pp3/techmap/cells_map.v' to AST representation.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\inpad'.
Generating RTLIL representation for module `\outpad'.
Generating RTLIL representation for module `\bipad'.
Generating RTLIL representation for module `\ckpad'.
Generating RTLIL representation for module `\qhsckibuff'.
Generating RTLIL representation for module `\qhsckbuff'.
Generating RTLIL representation for module `\gclkbuff'.
Generating RTLIL representation for module `\logic_cell_macro'.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\mux2x0'.
Generating RTLIL representation for module `\mux4x0'.
Generating RTLIL representation for module `\mux8x0'.
Generating RTLIL representation for module `\LUT1'.
Generating RTLIL representation for module `\LUT2'.
Generating RTLIL representation for module `\LUT3'.
Generating RTLIL representation for module `\LUT4'.
Generating RTLIL representation for module `\dff'.
Generating RTLIL representation for module `\dffc'.
Generating RTLIL representation for module `\dffp'.
Generating RTLIL representation for module `\dffpc'.
Generating RTLIL representation for module `\dffe'.
Generating RTLIL representation for module `\dffec'.
Generating RTLIL representation for module `\dffepc'.
Generating RTLIL representation for module `\dffsc'.
Generating RTLIL representation for module `\qlal4s3b_cell_macro'.
Generating RTLIL representation for module `\qlal4s3_mult_32x32_cell'.
Generating RTLIL representation for module `\qlal4s3_mult_16x16_cell'.
Generating RTLIL representation for module `\qlal4s3_mult_cell_macro'.
Successfully finished Verilog frontend.

7.2. Continuing TECHMAP pass.
Using template logic_0 for cells of type logic_0.
No more expansions possible.

8. Executing TECHMAP pass (map to technology primitives).

8.1. Executing Verilog-2005 frontend: /home/veeracharyulu/qorc-sdk/fpga_toolchain_install/v1.3.1/quicklogic-arch-defs/share/techmaps/quicklogic/pp3/techmap/cells_map.v
Parsing Verilog input from `/home/veeracharyulu/qorc-sdk/fpga_toolchain_install/v1.3.1/quicklogic-arch-defs/share/techmaps/quicklogic/pp3/techmap/cells_map.v' to AST representation.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\inpad'.
Generating RTLIL representation for module `\outpad'.
Generating RTLIL representation for module `\bipad'.
Generating RTLIL representation for module `\ckpad'.
Generating RTLIL representation for module `\qhsckibuff'.
Generating RTLIL representation for module `\qhsckbuff'.
Generating RTLIL representation for module `\gclkbuff'.
Generating RTLIL representation for module `\logic_cell_macro'.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\mux2x0'.
Generating RTLIL representation for module `\mux4x0'.
Generating RTLIL representation for module `\mux8x0'.
Generating RTLIL representation for module `\LUT1'.
Generating RTLIL representation for module `\LUT2'.
Generating RTLIL representation for module `\LUT3'.
Generating RTLIL representation for module `\LUT4'.
Generating RTLIL representation for module `\dff'.
Generating RTLIL representation for module `\dffc'.
Generating RTLIL representation for module `\dffp'.
Generating RTLIL representation for module `\dffpc'.
Generating RTLIL representation for module `\dffe'.
Generating RTLIL representation for module `\dffec'.
Generating RTLIL representation for module `\dffepc'.
Generating RTLIL representation for module `\dffsc'.
Generating RTLIL representation for module `\qlal4s3b_cell_macro'.
Generating RTLIL representation for module `\qlal4s3_mult_32x32_cell'.
Generating RTLIL representation for module `\qlal4s3_mult_16x16_cell'.
Generating RTLIL representation for module `\qlal4s3_mult_cell_macro'.
Successfully finished Verilog frontend.

8.2. Continuing TECHMAP pass.
Using template qlal4s3b_cell_macro for cells of type qlal4s3b_cell_macro.
Using template $paramod$a3585111a807d9eb68f35b3cdf72c072f00fd2ee\LUT2 for cells of type LUT2.
Using template dff for cells of type dff.
Using template $paramod$3d8b5074d7a57ec09a018a5522f0514962b45f9f\LUT3 for cells of type LUT3.
Using template $paramod$ebab70a5830b6a9f5483ac0ce1c2f41b14b4eddd\LUT3 for cells of type LUT3.
Using template $paramod$08b61d33fc5053edb3ff48cc7932a6bed21127f8\LUT3 for cells of type LUT3.
Using template $paramod$0bac8de66bcfb448c202f31a4c603d45054ce4da\LUT4 for cells of type LUT4.
Using template $paramod$bf21fee4b6975de7353dd955d4b3a8eef751c7c5\LUT2 for cells of type LUT2.
Using template $paramod$78a792e807544314cbd918ff3dc0665065e00762\LUT4 for cells of type LUT4.
Using template $paramod$5c78c2936b979d140e9c5335a1758330d6e05c7b\LUT4 for cells of type LUT4.
Using template $paramod$3d8388c6e77681f3dd296c4ac76cfa8c66f7077b\LUT3 for cells of type LUT3.
Using template $paramod$60512bc3a8de051e95ae08443c3979dfecc7937e\LUT3 for cells of type LUT3.
Using template $paramod$d169107a3cf5d6fef6c02e2344a85f9a2f6a4adb\LUT4 for cells of type LUT4.
Using template $paramod$209ae4a08fba98890f4aad9b068286cb99f39aa0\LUT4 for cells of type LUT4.
Using template $paramod$e115536dba900bda0d3ebd5f283e79fa53fba256\LUT4 for cells of type LUT4.
Using template $paramod$2c16e524d34079620431678c7f0a8026eb93e228\LUT4 for cells of type LUT4.
Using template $paramod\LUT3\INIT=9'000000001\EQN=8'00110000 for cells of type LUT3.
Using template $paramod$86fc6f3441a6779c63af6935d48b3ebd1c0460a9\LUT3 for cells of type LUT3.
Using template $paramod$72dd4379b7d27e2d3f8bb7b284d236064f19b288\LUT3 for cells of type LUT3.
Using template dffe for cells of type dffe.
Using template $paramod$5dbd5459631524488fcf9d98e49652aeb94665c2\LUT4 for cells of type LUT4.
Using template $paramod$f9729b78c82b70fb6ef31a6d34848cfa6bc6c09c\LUT3 for cells of type LUT3.
Using template $paramod$137b9d3b3c6c733a81ffab6258d3fb787dabaec2\LUT4 for cells of type LUT4.
Using template $paramod$e26d5f83608228413558872bf585b830a9f56b6a\LUT2 for cells of type LUT2.
Using template $paramod$0dee8c45763e54f30353b4988d9129c450b64183\LUT3 for cells of type LUT3.
Using template $paramod$ef89328d7363dd7125c1eba8428f7d9cbe4f3212\LUT2 for cells of type LUT2.
Using template $paramod$d6994d0c267e294db2ae8ab4933a797e47cb57af\LUT3 for cells of type LUT3.
Using template $paramod$5312816914ac0257eca33ac3be87fd42e64349ca\LUT3 for cells of type LUT3.
Using template $paramod$88388c6c6a4eecfc7de7604fe66ccab36e5a053a\LUT2 for cells of type LUT2.
Using template $paramod$d0072a8af4321893630082a1108feac18ea2649c\LUT3 for cells of type LUT3.
Using template $paramod$730adfb485ed6cef87eb6b434905db0ddfa9b600\LUT2 for cells of type LUT2.
Using template mux4x0 for cells of type mux4x0.
Using template $paramod$479164122f6233c90fb1301d4db36001bb032146\outpad for cells of type outpad.
Using template $paramod$fa3380cd31d3eaf3369d75f1d1b91f2cba5e8470\outpad for cells of type outpad.
Using template $paramod$ed30829c13b3acb9519b3f008c9df903da206e61\outpad for cells of type outpad.
Using template $paramod$03eed137224500a5a8c1bb8d02f1b39dd96a7b82\LUT2 for cells of type LUT2.
Using template $paramod$4da62a2f3593426548f45892aaeb7356ad46a6a4\outpad for cells of type outpad.
Using template $paramod$03fa78d84bd5e07f6e124fa217a4ce84543d615a\outpad for cells of type outpad.
Using template $paramod$3494bf91dff70d828c5f5312272dede938de1112\outpad for cells of type outpad.
Using template $paramod$49ac275091341c6b3545739eefd0128158c45134\outpad for cells of type outpad.
No more expansions possible.

9. Executing TECHMAP pass (map to technology primitives).

9.1. Executing Verilog-2005 frontend: /home/veeracharyulu/qorc-sdk/fpga_toolchain_install/v1.3.1/quicklogic-arch-defs/bin/../share/arch/ql-eos-s3_wlcsp/cells/ram_map.v
Parsing Verilog input from `/home/veeracharyulu/qorc-sdk/fpga_toolchain_install/v1.3.1/quicklogic-arch-defs/bin/../share/arch/ql-eos-s3_wlcsp/cells/ram_map.v' to AST representation.
Generating RTLIL representation for module `\ram8k_2x1_cell_macro'.
Successfully finished Verilog frontend.

9.2. Continuing TECHMAP pass.
No more expansions possible.

10. Executing OPT_EXPR pass (perform const folding).
Optimizing module decade_counter.

11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \decade_counter..
Removed 0 unused cells and 162 unused wires.

12. Executing SETUNDEF pass (replace undef values with defined constants).

13. Printing statistics.

=== decade_counter ===

   Number of wires:               1309
   Number of wire bits:           1426
   Number of public wires:        1280
   Number of public wire bits:    1280
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                146
     ASSP                            1
     BIDIR_CELL                      7
     C_FRAG                         18
     Q_FRAG                         34
     T_FRAG                         86

14. Executing JSON backend.

15. Executing Verilog backend.
Dumping module `\decade_counter'.

Warnings: 9 unique messages, 12 total
End of script. Logfile hash: 2959510abd, CPU: user 2.42s system 0.08s, MEM: 274.16 MB peak
Yosys 0.9+2406 (git sha1 9ac3484, x86_64-conda_cos6-linux-gnu-gcc 1.24.0.133_b0863d8_dirty -fvisibility-inlines-hidden -fmessage-length=0 -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -fdebug-prefix-map=/root/anaconda3/conda-bld/yosys_1607410735049/work=/usr/local/src/conda/yosys-0.8.0_0003_e80fb742f_20201208_122808 -fdebug-prefix-map=/home/veeracharyulu/qorc-sdk/fpga_toolchain_install/v1.3.1/conda=/usr/local/src/conda-prefix -fPIC -Os)
Time spent: 63% 18x read_verilog (1 sec), 8% 4x write_verilog (0 sec), ...
